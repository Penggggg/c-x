"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var app = getApp();
Component({
    properties: {},
    data: {
        isIPhoneX: false,
        open: false,
        animationSku: null,
        animationSkuBg: null,
    },
    methods: {
        close: function () {
            var this_ = this;
            this_.triggerEvent('toggle', false);
            this_.setData({
                open: false
            });
            this.setAnimate();
        },
        open: function () {
            var this_ = this;
            var open = this_.data.open;
            this_.setData({
                open: true
            });
            this.setAnimate();
        },
        setAnimate: function () {
            var this_ = this;
            var _a = this_.data, open = _a.open, isIPhoneX = _a.isIPhoneX;
            var animationSkuMeta = wx.createAnimation({
                duration: 250,
                timingFunction: 'ease-out',
                transformOrigin: '50% 50%',
            });
            var animationSkuBgMeta = wx.createAnimation({
                duration: 250,
                timingFunction: 'ease-out',
                transformOrigin: '50% 50%',
            });
            if (open) {
                var height = isIPhoneX ? '-72vh' : '-70vh';
                animationSkuMeta.opacity(0.3).translateY(height).opacity(1).step();
                animationSkuBgMeta.opacity(1).step();
            }
            else {
                animationSkuMeta.opacity(0.5).translateY('70vh').opacity(0).step();
                animationSkuBgMeta.opacity(0).step();
            }
            this_.setData({
                animationSku: animationSkuMeta.export(),
                animationSkuBg: animationSkuBgMeta.export()
            });
        },
        preventTouchMove: function () {
        },
        watchApp: function () {
            var _this = this;
            app.watch$('Common.isIPhoneX', function (v) {
                _this.setData({
                    isIPhoneX: v
                });
            });
        }
    },
    attached: function () {
        this.watchApp();
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQU1BLElBQU0sR0FBRyxHQUFHLE1BQU0sRUFBVyxDQUFDO0FBTTlCLFNBQVMsQ0FBQztJQUtOLFVBQVUsRUFBRSxFQUVYO0lBS0QsSUFBSSxFQUFFO1FBRUYsU0FBUyxFQUFFLEtBQUs7UUFHaEIsSUFBSSxFQUFFLEtBQUs7UUFHWCxZQUFZLEVBQUUsSUFBSTtRQUdsQixjQUFjLEVBQUUsSUFBSTtLQUV2QjtJQUtELE9BQU8sRUFBRTtRQUdMLEtBQUs7WUFDRCxJQUFNLEtBQUssR0FBSSxJQUFZLENBQUM7WUFDNUIsS0FBSyxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFFLENBQUM7WUFDckMsS0FBSyxDQUFDLE9BQU8sQ0FBQztnQkFDVixJQUFJLEVBQUUsS0FBSzthQUNkLENBQUMsQ0FBQztZQUVILElBQUksQ0FBQyxVQUFVLEVBQUcsQ0FBQztRQUN2QixDQUFDO1FBR0QsSUFBSTtZQUNBLElBQU0sS0FBSyxHQUFJLElBQVksQ0FBQztZQUNwQixJQUFBLHNCQUFJLENBQWdCO1lBRTVCLEtBQUssQ0FBQyxPQUFPLENBQUM7Z0JBQ1YsSUFBSSxFQUFFLElBQUk7YUFDYixDQUFDLENBQUM7WUFFSCxJQUFJLENBQUMsVUFBVSxFQUFHLENBQUM7UUFDdkIsQ0FBQztRQUdELFVBQVU7WUFDTixJQUFNLEtBQUssR0FBSSxJQUFZLENBQUM7WUFDdEIsSUFBQSxlQUFnQyxFQUE5QixjQUFJLEVBQUUsd0JBQXdCLENBQUM7WUFFdkMsSUFBTSxnQkFBZ0IsR0FBUSxFQUFFLENBQUMsZUFBZSxDQUFDO2dCQUM3QyxRQUFRLEVBQUUsR0FBRztnQkFDYixjQUFjLEVBQUUsVUFBVTtnQkFDMUIsZUFBZSxFQUFFLFNBQVM7YUFDN0IsQ0FBQyxDQUFDO1lBRUgsSUFBTSxrQkFBa0IsR0FBUSxFQUFFLENBQUMsZUFBZSxDQUFDO2dCQUMvQyxRQUFRLEVBQUUsR0FBRztnQkFDYixjQUFjLEVBQUUsVUFBVTtnQkFDMUIsZUFBZSxFQUFFLFNBQVM7YUFDN0IsQ0FBQyxDQUFDO1lBRUgsSUFBSyxJQUFJLEVBQUc7Z0JBQ1IsSUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztnQkFDN0MsZ0JBQWdCLENBQUMsT0FBTyxDQUFFLEdBQUcsQ0FBRSxDQUFDLFVBQVUsQ0FBRSxNQUFNLENBQUUsQ0FBQyxPQUFPLENBQUUsQ0FBQyxDQUFFLENBQUMsSUFBSSxFQUFHLENBQUM7Z0JBQzFFLGtCQUFrQixDQUFDLE9BQU8sQ0FBRSxDQUFDLENBQUUsQ0FBQyxJQUFJLEVBQUcsQ0FBQzthQUMzQztpQkFBTTtnQkFDSCxnQkFBZ0IsQ0FBQyxPQUFPLENBQUUsR0FBRyxDQUFFLENBQUMsVUFBVSxDQUFFLE1BQU0sQ0FBRSxDQUFDLE9BQU8sQ0FBRSxDQUFDLENBQUUsQ0FBQyxJQUFJLEVBQUcsQ0FBQztnQkFDMUUsa0JBQWtCLENBQUMsT0FBTyxDQUFFLENBQUMsQ0FBRSxDQUFDLElBQUksRUFBRyxDQUFDO2FBQzNDO1lBRUQsS0FBSyxDQUFDLE9BQU8sQ0FBQztnQkFDVixZQUFZLEVBQUUsZ0JBQWdCLENBQUMsTUFBTSxFQUFHO2dCQUN4QyxjQUFjLEVBQUUsa0JBQWtCLENBQUMsTUFBTSxFQUFHO2FBQy9DLENBQUMsQ0FBQTtRQUVOLENBQUM7UUFHRCxnQkFBZ0I7UUFFaEIsQ0FBQztRQUdELFFBQVE7WUFBUixpQkFPQztZQU5HLEdBQUcsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLEVBQUUsVUFBQSxDQUFDO2dCQUUzQixLQUFZLENBQUMsT0FBUSxDQUFDO29CQUNuQixTQUFTLEVBQUUsQ0FBQztpQkFDZixDQUFDLENBQUE7WUFDTixDQUFDLENBQUMsQ0FBQztRQUNQLENBQUM7S0FFSjtJQUVELFFBQVEsRUFBRTtRQUNOLElBQUksQ0FBQyxRQUFRLEVBQUcsQ0FBQztJQUNyQixDQUFDO0NBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUFwcCB9IGZyb20gXCIuLi8uLi9nbG9iYWxcIjtcbmltcG9ydCB7IG5hdlRvIH0gZnJvbSAnLi4vLi4vdXRpbHMvcm91dGUuanMnO1xuaW1wb3J0IHsgaHR0cCB9IGZyb20gJy4uLy4uL3V0aWxzL2h0dHAuanMnO1xuaW1wb3J0IHsgY2xvdWRIdHRwIH0gZnJvbSAnLi4vLi4vdXRpbHMvY2xvdWRIdHRwJztcbmltcG9ydCB7IGNvbXB1dGVkIH0gZnJvbSAnLi4vLi4vbGliL3Z1ZWZ5L2luZGV4LmpzJztcblxuY29uc3QgYXBwID0gZ2V0QXBwPCBJQXBwID4oICk7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKiDoj5zlk4HmoIfnrb7pgInmi6nliJfooahcbiAqL1xuQ29tcG9uZW50KHtcblxuICAgIC8qKlxuICAgICAqIOe7hOS7tueahOWxnuaAp+WIl+ihqFxuICAgICAqL1xuICAgIHByb3BlcnRpZXM6IHtcblxuICAgIH0sXG4gIFxuICAgIC8qKlxuICAgICAqIOe7hOS7tueahOWIneWni+aVsOaNrlxuICAgICAqL1xuICAgIGRhdGE6IHtcblxuICAgICAgICBpc0lQaG9uZVg6IGZhbHNlLFxuXG4gICAgICAgIC8qKiDmmK/lkKblsZXlvIAgKi9cbiAgICAgICAgb3BlbjogZmFsc2UsXG5cbiAgICAgICAgLyoqIOWKqOeUuzEgKi9cbiAgICAgICAgYW5pbWF0aW9uU2t1OiBudWxsLFxuXG4gICAgICAgIC8qKiDliqjnlLsyICovXG4gICAgICAgIGFuaW1hdGlvblNrdUJnOiBudWxsLFxuXG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICog57uE5Lu255qE5pa55rOV5YiX6KGoXG4gICAgICovXG4gICAgbWV0aG9kczoge1xuXG4gICAgICAgIC8qKiDlhbPpl63lvLnnqpcgKi9cbiAgICAgICAgY2xvc2UoICkge1xuICAgICAgICAgICAgY29uc3QgdGhpc18gPSAodGhpcyBhcyBhbnkpO1xuICAgICAgICAgICAgdGhpc18udHJpZ2dlckV2ZW50KCd0b2dnbGUnLCBmYWxzZSApO1xuICAgICAgICAgICAgdGhpc18uc2V0RGF0YSh7XG4gICAgICAgICAgICAgICAgb3BlbjogZmFsc2VcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB0aGlzLnNldEFuaW1hdGUoICk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqIOWklumDqOiwg+eUqO+8muWxleW8gCAqL1xuICAgICAgICBvcGVuKCApIHtcbiAgICAgICAgICAgIGNvbnN0IHRoaXNfID0gKHRoaXMgYXMgYW55KTtcbiAgICAgICAgICAgIGNvbnN0IHsgb3BlbiB9ID0gdGhpc18uZGF0YTtcblxuICAgICAgICAgICAgdGhpc18uc2V0RGF0YSh7XG4gICAgICAgICAgICAgICAgb3BlbjogdHJ1ZVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHRoaXMuc2V0QW5pbWF0ZSggKTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKiog5Yqo55S7ICovXG4gICAgICAgIHNldEFuaW1hdGUoICkge1xuICAgICAgICAgICAgY29uc3QgdGhpc18gPSAodGhpcyBhcyBhbnkpO1xuICAgICAgICAgICAgY29uc3QgeyBvcGVuLCBpc0lQaG9uZVggfSA9IHRoaXNfLmRhdGE7XG5cbiAgICAgICAgICAgIGNvbnN0IGFuaW1hdGlvblNrdU1ldGE6IGFueSA9IHd4LmNyZWF0ZUFuaW1hdGlvbih7IFxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyNTAsIFxuICAgICAgICAgICAgICAgIHRpbWluZ0Z1bmN0aW9uOiAnZWFzZS1vdXQnLCBcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm1PcmlnaW46ICc1MCUgNTAlJyxcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBjb25zdCBhbmltYXRpb25Ta3VCZ01ldGE6IGFueSA9IHd4LmNyZWF0ZUFuaW1hdGlvbih7IFxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyNTAsIFxuICAgICAgICAgICAgICAgIHRpbWluZ0Z1bmN0aW9uOiAnZWFzZS1vdXQnLCBcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm1PcmlnaW46ICc1MCUgNTAlJyxcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAoIG9wZW4gKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaGVpZ2h0ID0gaXNJUGhvbmVYID8gJy03MnZoJyA6ICctNzB2aCc7XG4gICAgICAgICAgICAgICAgYW5pbWF0aW9uU2t1TWV0YS5vcGFjaXR5KCAwLjMgKS50cmFuc2xhdGVZKCBoZWlnaHQgKS5vcGFjaXR5KCAxICkuc3RlcCggKTtcbiAgICAgICAgICAgICAgICBhbmltYXRpb25Ta3VCZ01ldGEub3BhY2l0eSggMSApLnN0ZXAoICk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGFuaW1hdGlvblNrdU1ldGEub3BhY2l0eSggMC41ICkudHJhbnNsYXRlWSggJzcwdmgnICkub3BhY2l0eSggMCApLnN0ZXAoICk7XG4gICAgICAgICAgICAgICAgYW5pbWF0aW9uU2t1QmdNZXRhLm9wYWNpdHkoIDAgKS5zdGVwKCApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzXy5zZXREYXRhKHtcbiAgICAgICAgICAgICAgICBhbmltYXRpb25Ta3U6IGFuaW1hdGlvblNrdU1ldGEuZXhwb3J0KCApLFxuICAgICAgICAgICAgICAgIGFuaW1hdGlvblNrdUJnOiBhbmltYXRpb25Ta3VCZ01ldGEuZXhwb3J0KCApXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqIOemgeatoua7keWKqCAqL1xuICAgICAgICBwcmV2ZW50VG91Y2hNb3ZlKCApIHtcblxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKiDnm5HlkKwgKi9cbiAgICAgICAgd2F0Y2hBcHAoICkge1xuICAgICAgICAgICAgYXBwLndhdGNoJCgnQ29tbW9uLmlzSVBob25lWCcsIHYgPT4ge1xuICAgICAgICAgICAgICAgIC8vIOWFvOWuuWlwb25lWFxuICAgICAgICAgICAgICAgICh0aGlzIGFzIGFueSkuc2V0RGF0YSEoe1xuICAgICAgICAgICAgICAgICAgICBpc0lQaG9uZVg6IHZcbiAgICAgICAgICAgICAgICB9KSBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgIH0sXG5cbiAgICBhdHRhY2hlZDogZnVuY3Rpb24oICkge1xuICAgICAgICB0aGlzLndhdGNoQXBwKCApO1xuICAgIH1cbn0pXG4gICJdfQ==