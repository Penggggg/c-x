"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = require("../../utils/http");
var index_1 = require("../../lib/vuefy/index");
var constant_1 = require("../../utils/constant");
var util_1 = require("../../utils/util");
var app = getApp();
Page({
    data: {
        current: 0,
        tabs: [
            {
                key: 0,
                label: '待付款',
                type: 'WAIT_PAY'
            }, {
                key: 1,
                label: '待审核',
                type: 'PAY_APPROVAL'
            }, {
                key: 2,
                label: '待发货',
                type: 'WAIT_DELIVER'
            },
            {
                key: 3,
                label: '待收货',
                type: 'WAIT_RECEIVR'
            },
            {
                key: 4,
                label: '全部',
                type: 'ALL'
            }
        ],
        emptyTest: {
            items: []
        },
        orderList: []
    },
    enterTime: 0,
    runComputed: function () {
        index_1.computed(this, {});
    },
    onTabChange: function (_a) {
        var detail = _a.detail;
        this.setData({
            current: detail
        });
        this.getOrderListByState({ state: this.data.tabs[detail].type });
    },
    onLoad: function (q) {
        if (q.state) {
            var index = this.data.tabs.findIndex(function (i) { return i.type === q.state; });
            index >= 0 && this.setData({
                current: index
            });
            this.getOrderListByState({ state: q.state });
        }
        else {
            this.getOrderListByState({ state: this.data.tabs[0].type });
        }
    },
    onShow: function () {
        this.enterTime = new Date().getTime();
    },
    onHide: function () {
        app.dataBury$([{
                "$code": "orderList",
                "$ts": this.enterTime,
                "enterTime": this.enterTime,
                "leaveTime": new Date().getTime()
            }]);
        this.enterTime = 0;
    },
    getOrderListByState: function (params) {
        var _this = this;
        try {
            http_1.http({
                method: 'get',
                path: "/apis/order/order-list",
                data: params.state === 'ALL' ? Object.assign(params, { state: '' }) : params
            }).then(function (val) {
                if (val.status !== 200) {
                    return;
                }
                _this.setData({
                    orderList: val.data.list.map(function (v, i) {
                        console.log('啦啦啦啦啦', (v.state === 'PAY_APPROVAL' && v.hasWaterList === '0'));
                        return {
                            time: util_1.formatTime(new Date(v.placeOrderTime)),
                            orderNo: v.orderNo,
                            id: v.id,
                            status: (v.state === 'PAY_APPROVAL' && v.hasWaterList === '0') ? '待上传' : constant_1.OrderStateCN[v.state],
                            state: v.state,
                            allPrice: v.actPrice.toFixed(2),
                            actPrice: v.actPrice,
                            items: v.items.map(function (k) {
                                return {
                                    image: k.skuImgs,
                                    name: k.skuName,
                                    desc: k.skuDesc,
                                    price: k.oriPrice.toFixed(2),
                                    count: k.qty
                                };
                            }),
                            type: v.type
                        };
                    }),
                });
            });
        }
        catch (error) {
            console.error('页面出错了', error);
        }
    }
});
//# sourceMappingURL=data:application/json;base64,