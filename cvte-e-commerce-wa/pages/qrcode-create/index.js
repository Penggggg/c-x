"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = require("../../utils/http");
var index_1 = require("../../lib/vuefy/index");
var app = getApp();
Page({
    data: {
        p: '',
        s: '',
        timeout: 0,
        preLoading: true,
        qrLoading: true
    },
    runComputed: function () {
        index_1.computed(this, {});
    },
    fetchAnaly: function () {
        var _this = this;
        http_1.http({
            path: "/apis/partner/share-url"
        }).then(function (res) {
            var data = res.data, status = res.status;
            if (status !== 200) {
                return;
            }
            var s = _this.data.s;
            var analyQuery = data.split('?')[1];
            _this.setData({
                s: s ? s + "&" + analyQuery : analyQuery
            });
            setTimeout(function () {
                _this.setData({
                    preLoading: false,
                });
            }, 50);
        });
    },
    isLoad: function (_a) {
        var detail = _a.detail;
        this.setData({
            qrLoading: false
        });
    },
    onLoad: function (options) {
        var _this = this;
        var p = options.p, s = options.s;
        this.setData({
            s: s ? decodeURIComponent(s) : '',
            p: p ? decodeURIComponent(p) : 'pages/index/index',
            timeout: 0
        });
        setTimeout(function () {
            _this.fetchAnaly();
        }, 50);
    },
    onShow: function () {
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLHlDQUF3QztBQUV4QywrQ0FBaUQ7QUFHakQsSUFBTSxHQUFHLEdBQUcsTUFBTSxFQUFXLENBQUM7QUFFOUIsSUFBSSxDQUFDO0lBRUQsSUFBSSxFQUFFO1FBR0YsQ0FBQyxFQUFFLEVBQUU7UUFHTCxDQUFDLEVBQUUsRUFBRTtRQUdMLE9BQU8sRUFBRSxDQUFDO1FBR1YsVUFBVSxFQUFFLElBQUk7UUFHaEIsU0FBUyxFQUFFLElBQUk7S0FDbEI7SUFFRCxXQUFXO1FBQ1AsZ0JBQVEsQ0FBRSxJQUFJLEVBQUUsRUFFZixDQUFDLENBQUM7SUFDUCxDQUFDO0lBR0QsVUFBVTtRQUFWLGlCQW1CQztRQWxCRyxXQUFJLENBQUM7WUFDRCxJQUFJLEVBQUUseUJBQXlCO1NBQ2xDLENBQUMsQ0FBQyxJQUFJLENBQUUsVUFBQSxHQUFHO1lBRUEsSUFBQSxlQUFJLEVBQUUsbUJBQU0sQ0FBUztZQUM3QixJQUFLLE1BQU0sS0FBSyxHQUFHLEVBQUc7Z0JBQUUsT0FBTzthQUFFO1lBRXpCLElBQUEsZ0JBQUMsQ0FBZTtZQUN4QixJQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFFLENBQUMsQ0FBRSxDQUFDO1lBQ3hDLEtBQUksQ0FBQyxPQUFRLENBQUM7Z0JBQ1YsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUksQ0FBQyxTQUFJLFVBQVksQ0FBQyxDQUFDLENBQUMsVUFBVTthQUMzQyxDQUFDLENBQUE7WUFDRixVQUFVLENBQUM7Z0JBQ1AsS0FBSSxDQUFDLE9BQVEsQ0FBQztvQkFDVixVQUFVLEVBQUUsS0FBSztpQkFDcEIsQ0FBQyxDQUFBO1lBQ04sQ0FBQyxFQUFFLEVBQUUsQ0FBRSxDQUFDO1FBQ1osQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBR0QsTUFBTSxZQUFDLEVBQVU7WUFBUixrQkFBTTtRQUNYLElBQUksQ0FBQyxPQUFRLENBQUM7WUFDVixTQUFTLEVBQUUsS0FBSztTQUNuQixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsTUFBTSxZQUFFLE9BQVk7UUFBcEIsaUJBWUM7UUFYVyxJQUFBLGFBQUMsRUFBRSxhQUFDLENBQWE7UUFDekIsSUFBSSxDQUFDLE9BQVEsQ0FBQztZQUNWLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLGtCQUFrQixDQUFFLENBQUMsQ0FBRSxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ25DLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLGtCQUFrQixDQUFFLENBQUMsQ0FBRSxDQUFDLENBQUMsQ0FBQyxtQkFBbUI7WUFFcEQsT0FBTyxFQUFFLENBQUM7U0FDYixDQUFDLENBQUM7UUFFSCxVQUFVLENBQUM7WUFDUCxLQUFJLENBQUMsVUFBVSxFQUFHLENBQUM7UUFDdkIsQ0FBQyxFQUFFLEVBQUUsQ0FBRSxDQUFDO0lBQ1osQ0FBQztJQUVELE1BQU07SUFFTixDQUFDO0NBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbmZpZyBmcm9tICcuLi8uLi9jb25maWcvaW5kZXgnO1xuaW1wb3J0IHsgSUFwcCB9IGZyb20gXCIuLi8uLi9nbG9iYWxcIjtcbmltcG9ydCB7IGh0dHAgfSBmcm9tICcuLi8uLi91dGlscy9odHRwJztcbmltcG9ydCB7IGNsb3VkSHR0cCB9IGZyb20gJy4uLy4uL3V0aWxzL2Nsb3VkSHR0cCc7XG5pbXBvcnQgeyBjb21wdXRlZCB9IGZyb20gJy4uLy4uL2xpYi92dWVmeS9pbmRleCc7XG5pbXBvcnQgeyBuYXZUbyB9IGZyb20gJy4uLy4uL3V0aWxzL3JvdXRlJztcblxuY29uc3QgYXBwID0gZ2V0QXBwPCBJQXBwID4oICk7XG5cblBhZ2Uoe1xuXG4gICAgZGF0YToge1xuXG4gICAgICAgIC8vIOS6jOe7tOeggemhtemdouWPguaVsFxuICAgICAgICBwOiAnJyxcblxuICAgICAgICAvLyDkuoznu7TnoIHpobXpnaLlj4LmlbBcbiAgICAgICAgczogJycsXG5cbiAgICAgICAgLy8g5LqM57u056CB6LaF5pe2XG4gICAgICAgIHRpbWVvdXQ6IDAsXG5cbiAgICAgICAgLy8g5Yqg6L29XG4gICAgICAgIHByZUxvYWRpbmc6IHRydWUsXG5cbiAgICAgICAgLy8g5LqM57u056CB5Yqg6L29XG4gICAgICAgIHFyTG9hZGluZzogdHJ1ZVxuICAgIH0sXG5cbiAgICBydW5Db21wdXRlZCggKSB7XG4gICAgICAgIGNvbXB1dGVkKCB0aGlzLCB7XG5cbiAgICAgICAgfSk7IFxuICAgIH0sXG5cbiAgICAvLyDosIPlj5bliIbkuqvmlbDmja7nu5/orqHmjqXlj6NcbiAgICBmZXRjaEFuYWx5KCApIHtcbiAgICAgICAgaHR0cCh7XG4gICAgICAgICAgICBwYXRoOiBgL2FwaXMvcGFydG5lci9zaGFyZS11cmxgXG4gICAgICAgIH0pLnRoZW4oIHJlcyA9PiB7XG5cbiAgICAgICAgICAgIGNvbnN0IHsgZGF0YSwgc3RhdHVzIH0gPSByZXM7XG4gICAgICAgICAgICBpZiAoIHN0YXR1cyAhPT0gMjAwICkgeyByZXR1cm47IH1cblxuICAgICAgICAgICAgY29uc3QgeyBzIH0gPSB0aGlzLmRhdGE7XG4gICAgICAgICAgICBjb25zdCBhbmFseVF1ZXJ5ID0gZGF0YS5zcGxpdCgnPycpWyAxIF07XG4gICAgICAgICAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgICAgICAgICAgICBzOiBzID8gYCR7c30mJHthbmFseVF1ZXJ5fWAgOiBhbmFseVF1ZXJ5XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgc2V0VGltZW91dCgoICkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgICAgICAgICAgICAgICBwcmVMb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSwgNTAgKTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8qKiDkuoznu7TnoIHlh4blpIflpb0gKi9cbiAgICBpc0xvYWQoeyBkZXRhaWwgfSkge1xuICAgICAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgICAgICAgIHFyTG9hZGluZzogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIG9uTG9hZCggb3B0aW9uczogYW55ICkge1xuICAgICAgICBjb25zdCB7IHAsIHMgfSA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgICAgICAgczogcyA/IGRlY29kZVVSSUNvbXBvbmVudCggcyApIDogJycsXG4gICAgICAgICAgICBwOiBwID8gZGVjb2RlVVJJQ29tcG9uZW50KCBwICkgOiAncGFnZXMvaW5kZXgvaW5kZXgnLFxuICAgICAgICAgICAgLy8gdGltZW91dDogbmV3IERhdGUoIERhdGUubm93KCApICsgMSAqIDYwICogMTAwMCApLmdldFRpbWUoIClcbiAgICAgICAgICAgIHRpbWVvdXQ6IDBcbiAgICAgICAgfSk7XG5cbiAgICAgICAgc2V0VGltZW91dCgoICkgPT4ge1xuICAgICAgICAgICAgdGhpcy5mZXRjaEFuYWx5KCApO1xuICAgICAgICB9LCA1MCApO1xuICAgIH0sXG5cbiAgICBvblNob3coICkge1xuXG4gICAgfVxufSlcbiJdfQ==