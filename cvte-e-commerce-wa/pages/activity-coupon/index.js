"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = require("../../utils/http");
var index_1 = require("../../lib/vuefy/index");
var route_1 = require("../../utils/route");
var util_1 = require("../../utils/util");
var app = getApp();
Page({
    data: {
        env: '',
        inited: false,
        acId: '',
        detail: {},
        coupons: []
    },
    runComputed: function () {
        index_1.computed(this, {
            coupons$: function () {
                var coupons = this.data.coupons;
                return coupons.map(function (x) { return util_1.couponToFront(x, { used: false }); });
            }
        });
    },
    watchApp: function () {
        var _this = this;
        app.watch$('Auth.sysUserInfo', function (v) {
            var acId = _this.data.acId;
            if (!!v) {
                _this.fetchCoupon(acId);
                _this.fetchActivity(acId);
                _this.setData({
                    inited: true
                });
            }
        });
    },
    fetchActivity: function (acId) {
        var _this = this;
        var env = this.data.env;
        if (!acId) {
            return;
        }
        http_1.http({
            env: env,
            path: "/apis/activity/detail/" + acId
        }).then(function (res) {
            var status = res.status, data = res.data;
            if (status !== 200) {
                return;
            }
            _this.setData({
                detail: data
            });
        });
    },
    fetchCoupon: function (acId) {
        var _this = this;
        var env = this.data.env;
        if (!acId) {
            return;
        }
        http_1.http({
            env: env,
            loadingMsg: 'none',
            path: "/apis/activity/counpon/" + acId
        }).then(function (res) {
            var status = res.status, data = res.data;
            if (status !== 200) {
                return;
            }
            _this.setData({
                coupons: data || []
            });
        });
    },
    getCoupon: function () {
        var _a = this.data, acId = _a.acId, coupons = _a.coupons, env = _a.env;
        if (!app.store.Auth.sysUserInfo.id) {
            return route_1.navTo('/pages/login/index');
        }
        http_1.http({
            env: env,
            method: 'POST',
            path: "/apis/coupons/batch_receive",
            data: coupons.map(function (x) { return ({
                channel: '小程序',
                couponTemplateId: x.id,
                receiveNum: 1,
                sourceId: acId,
                sourceType: '1'
            }); })
        }).then(function (res) {
            var status = res.status, data = res.data;
            if (status !== 200) {
                return;
            }
            wx.showToast({
                title: '领取成功'
            });
            route_1.navTo('/pages/main-page/index');
        });
    },
    onLoad: function (query) {
        var _query = util_1.queryParse(decodeURIComponent(query.s || '') || 'a=84aed1&f=code');
        var a = _query.a, f = _query.f, e = _query.e;
        console.log('!!!扫码进来啦！', query);
        console.log('!!!_query', _query);
        this.watchApp();
        this.runComputed();
        !!a && this.setData({
            env: e || '',
            acId: a
        });
    },
    onShow: function () {
        var _a = this.data, acId = _a.acId, inited = _a.inited;
        if (!!inited) {
            this.fetchCoupon(acId);
            this.fetchActivity(acId);
        }
    }
});
//# sourceMappingURL=data:application/json;base64,