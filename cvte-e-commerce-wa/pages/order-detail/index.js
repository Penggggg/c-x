"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = require("../../utils/http");
var index_1 = require("../../lib/vuefy/index");
var route_1 = require("../../utils/route");
var util_1 = require("../../utils/util");
var index_2 = require("../../store/index");
var constant_1 = require("../../utils/constant");
var app = getApp();
Page({
    data: {
        no: '',
        showInvoice: '0',
        od: {
            id: ''
        },
        loading: true,
        countdown: 0,
        enterTime: 0
    },
    runComputed: function () {
        index_1.computed(this, {
            od$: function () {
                var _a = this.data, od = _a.od, loading = _a.loading;
                var placeOrderTime = od.placeOrderTime, type = od.type, state = od.state, payTime = od.payTime, invoiceInfo = od.invoiceInfo;
                if (loading) {
                    return {};
                }
                var format = function (dd) {
                    var time = new Date(dd);
                    var y = time.getFullYear();
                    var m = time.getMonth() + 1;
                    var d = time.getDate();
                    var h = time.getHours();
                    var mm = time.getMinutes();
                    return y + "-" + m + "-" + d + " " + h + ":" + mm;
                };
                var invoiceInfo$ = {};
                if (!!invoiceInfo && Object.keys(invoiceInfo).length > 0) {
                    var type_1 = invoiceInfo.type, invoiceType = invoiceInfo.invoiceType, invoiceTitle = invoiceInfo.invoiceTitle, taxNo = invoiceInfo.taxNo, enterpriseTelephone = invoiceInfo.enterpriseTelephone, bankAccount = invoiceInfo.bankAccount, openingBank = invoiceInfo.openingBank, enterpriseAddress = invoiceInfo.enterpriseAddress;
                    invoiceInfo$ = __assign({}, invoiceInfo, { taxNo: taxNo,
                        bankAccount: bankAccount,
                        openingBank: openingBank,
                        invoiceTitle: invoiceTitle,
                        enterpriseAddress: enterpriseAddress,
                        enterpriseTelephone: enterpriseTelephone, type: constant_1.InvoiceChoiceTypeCN[type_1], invoiceType: constant_1.InvoiceTypeCN[invoiceType] || '' });
                }
                var meta = __assign({}, od, { invoiceInfo$: invoiceInfo$, state$: constant_1.OrderStateCN[state], type$: constant_1.OrderPayTypeCN[type], createTime$: format(placeOrderTime), payTime$: payTime ?
                        format(payTime) :
                        '暂未支付', items$: !od.items ? [] :
                        od.items.map(function (i) { return ({
                            image: i.skuImgs,
                            name: i.skuName || '',
                            desc: i.skuDesc || '',
                            price: i.oriPrice.toFixed(2),
                            count: i.qty
                        }); }) });
                console.log('......', meta);
                return meta;
            }
        });
    },
    getOrderDetail: function (no) {
        var _this = this;
        if (!no) {
            return;
        }
        http_1.http({
            method: 'get',
            path: "/apis/order/detail/" + no
        }).then(function (res) {
            var status = res.status, data = res.data;
            if (status !== 200)
                return;
            _this.dealState(data);
            _this.setData({
                od: data,
                loading: false
            });
        });
    },
    dealState: function (orderDetail) {
        var countdown = 0;
        var placeOrderTime = orderDetail.placeOrderTime, state = orderDetail.state, type = orderDetail.type;
        var createOrderTime = new Date(placeOrderTime).getTime();
        var dealLineTS = type === constant_1.OrderPayType.ONLINE_PAY ?
            createOrderTime + constant_1.OnlinePayDeadLine :
            createOrderTime + constant_1.OfflinePayDeadLine;
        if ((state === constant_1.OrderState.WAIT_PAY || state === constant_1.OrderState.PAY_APPROVAL) && dealLineTS > Date.now()) {
            countdown = Number(((dealLineTS - Date.now()) / 1000).toFixed(0));
        }
        this.setData({
            countdown: countdown
        });
    },
    onCancel: function () {
        app.dataBury$([{
                "$code": "cancelOrder",
                "$ts": new Date().getTime(),
                "goodsId": this.data.od.id
            }]);
        var id = '';
        http_1.http({
            method: 'put',
            path: "/apis/order/" + this.data.od.id + "/cancel",
        }).then(function (val) {
            if (val.status !== 200) {
                return;
            }
            wx.showToast({
                title: '取消成功'
            });
            wx.redirectTo({
                url: '/pages/order-list/index?state=ALL'
            });
        });
    },
    onShowInvoice: function () {
        var _a = this.data, no = _a.no, od = _a.od;
        if (!od.invoiceInfo) {
            return;
        }
        route_1.navTo("/pages/order-detail/index?si=1&no=" + no);
    },
    onPay: function () {
        var this_ = this;
        var item = this_.data.od;
        app.dataBury$([{
                "$code": "gotoPay",
                "$ts": new Date().getTime(),
                "goodsId": item.id
            }]);
        if (this.data.countdown <= 0) {
            wx.showToast({
                icon: 'none',
                title: '订单已过期～'
            });
            return;
        }
        console.log('我要支付', item);
        item.type === 'OFFLINE_PAY' && route_1.navTo("/pages/pay-res/index?state=WAIT_REMIT&no=" + item.orderNo);
        item.type === 'ONLINE_PAY' && this.wxPay({
            out_trade_no: item.id,
            total_fee: item.actPrice * 100,
            spbill_create_ip: '127.0.0.1',
            openid: index_2.store$.Auth.openid,
            body: '支付商品'
        }, item.orderNo);
    },
    wxPay: function (data, orderNo) {
        http_1.http({
            method: 'POST',
            path: '/apis/wxPay/prepay',
            data: data,
            errMsg: '支付出错啦 ～'
        }).then(function (val) {
            if (val.status !== 200) {
                return;
            }
            wx.requestPayment(Object.assign(val.data, {
                success: function (res) {
                    http_1.http({
                        method: 'PUT',
                        errMsg: 'none',
                        path: "/apis/order/frontend_confirm/" + data.out_trade_no,
                    }).then(function () {
                        route_1.navTo("/pages/order-detail/index?no=" + orderNo);
                    });
                }, fail: function (res) {
                    wx.showToast({
                        title: '支付失败',
                        icon: 'none'
                    });
                }
            }));
        }).catch(function (e) {
            console.error('出错了44:', e);
        });
    },
    onCall: function () {
        wx.makePhoneCall({
            phoneNumber: app.store.Common.customerService
        });
    },
    onCopy: function (_a) {
        var currentTarget = _a.currentTarget;
        var clipboard = currentTarget.dataset.clipboard;
        !!clipboard && wx.setClipboardData({
            data: clipboard
        });
    },
    onLoad: function (q) {
        this.onPay = util_1.debounce(this.onPay, 500);
        this.onCancel = util_1.debounce(this.onCancel, 500);
        var si = q.si, no = q.no;
        this.getOrderDetail(no);
        this.runComputed();
        this.setData({
            no: no
        });
        if (!!si) {
            this.setData({
                showInvoice: si
            });
        }
    },
    onShow: function () {
        this.setData({
            enterTime: Date.now()
        });
    },
    onHide: function () {
        var enterTime = this.data.enterTime;
        app.dataBury$([{
                "$code": "selectBecomePartner",
                "$ts": enterTime,
                "enterTime": enterTime,
                "leaveTime": Date.now()
            }]);
        this.setData({
            enterTime: 0
        });
    }
});
//# sourceMappingURL=data:application/json;base64,