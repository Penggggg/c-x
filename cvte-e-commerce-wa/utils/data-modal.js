"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NewModal = (function () {
    function NewModal(data) {
        this.transfer = {};
        this.dataList = data;
    }
    NewModal.prototype.format = function () {
    };
    NewModal.prototype.buildObj = function (data, origin) {
        var _this = this;
        if (data.type === 'String') {
            origin[data.key] = data.default || '';
            return origin[data.key];
        }
        else if (data.type === 'Number') {
            origin[data.key] = data.default || 0;
            return origin[data.key];
        }
        else if (data.type === 'Date') {
            origin[data.key] = data.default || new Date().getTime();
            return origin[data.key];
        }
        else if (data.type === 'Array') {
            if (data.children) {
                origin[data.key] = [this.buildObj(data.children[0], {})];
                return origin[data.key];
            }
            origin[data.key] = data.default || new Array();
            return origin[data.key];
        }
        else if (data.type === 'Object') {
            if (data.children) {
                origin[data.key] = {};
                data.children.map(function (item) {
                    origin[data.key][item.key] = _this.buildObj(item, {});
                });
                return origin;
            }
            origin[data.key] = data.default || {};
            return data.default || {};
        }
    };
    NewModal.prototype.getDefault = function () {
        var temp = Object.create(null);
        this.buildObj(this.dataList, temp);
        return temp;
    };
    NewModal.prototype.parse = function (data) {
    };
    return NewModal;
}());
var Modal = (function () {
    function Modal(data) {
        this.transfer = {};
        this.dataList = data;
    }
    Modal.prototype.format = function () {
    };
    Modal.prototype.parse = function (data) {
        var _this = this;
        this.dataList.map(function (item) {
            _this.transfer[item.key];
        });
    };
    return Modal;
}());
var datas = [{
        actId: "",
        attribute1: null,
        attribute2: null,
        attribute3: null,
        attribute4: null,
        attribute5: null,
        attribute6: null,
        backgroundColor: "#red",
        batchNo: null,
        calculateRule: null,
        crtHost: "127.0.0.1",
        crtName: "许宪成",
        crtTime: "2019-09-02T08:40:20.000+0000",
        crtUser: "67e340a29247432084121dd96a1d7228",
        effectiveTime: "2019-09-01T16:00:00.000+0000",
        enableEdit: "0",
        expirationInterval: null,
        expiredTime: null,
        icon: "www.google.com",
        id: "26eb44ae79a7454ba75cb4627d5b6c16",
        image: "www.google.com",
        isDeleted: "0",
        isEnabled: "1",
        leftQuantity: null,
        limitReceiveNum: 1,
        limitRules: [],
        name: "P65CA套装优惠券",
        remark: "P65CA套装优惠券",
        status: "1",
        subName: "P65CA套装优惠券",
        subStatus: null,
        tenantId: "8aa95a75877542d398881a30594beadf",
        totalQuantity: 100,
        type: null,
        orders: {}
    }];
exports.default = NewModal;
//# sourceMappingURL=data:application/json;base64,